{"ast":null,"code":"// api.js\n// All API-related functions and constants for the restaurant app\nimport axios from \"axios\";\nexport const API_BASE_URL = \"http://localhost:8000/api\";\n\n// Fetch categories\nexport function fetchCategories() {\n  return axios.get(`${API_BASE_URL}/categories`);\n}\n\n// Fetch category chart data\nexport function fetchCategoryChartData() {\n  return axios.get(`${API_BASE_URL}/categories/chart`);\n}\n\n// Fetch customers (with token)\nexport function fetchCustomers(token) {\n  return axios.get(`${API_BASE_URL}/customers`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Fetch customer chart data (with token)\nexport function fetchCustomerChartData(token) {\n  return axios.get(`${API_BASE_URL}/customers/chart`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Fetch single customer by ID (with token)\nexport function fetchCustomerById(id, token) {\n  return axios.get(`${API_BASE_URL}/customers/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Add new customer (with token)\nexport function addCustomer(data, token) {\n  return axios.post(`${API_BASE_URL}/customers`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\n// Update customer (with token)\nexport function updateCustomer(id, data, token) {\n  return axios.put(`${API_BASE_URL}/customers/${id}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\n// Delete customer (with token)\nexport function deleteCustomer(id, token) {\n  return axios.delete(`${API_BASE_URL}/customers/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\n// Print customer data (with token)\nexport function printCustomerData(token) {\n  return axios.get(`${API_BASE_URL}/customers/print`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}","map":{"version":3,"names":["axios","API_BASE_URL","fetchCategories","get","fetchCategoryChartData","fetchCustomers","token","headers","Authorization","fetchCustomerChartData","fetchCustomerById","id","addCustomer","data","post","updateCustomer","put","deleteCustomer","delete","printCustomerData"],"sources":["c:/xampp2/htdocs/project-react-resto/src/api.js"],"sourcesContent":["// api.js\r\n// All API-related functions and constants for the restaurant app\r\nimport axios from \"axios\";\r\n\r\nexport const API_BASE_URL = \"http://localhost:8000/api\";\r\n\r\n// Fetch categories\r\nexport function fetchCategories() {\r\n  return axios.get(`${API_BASE_URL}/categories`);\r\n}\r\n\r\n// Fetch category chart data\r\nexport function fetchCategoryChartData() {\r\n  return axios.get(`${API_BASE_URL}/categories/chart`);\r\n}\r\n\r\n// Fetch customers (with token)\r\nexport function fetchCustomers(token) {\r\n  return axios.get(`${API_BASE_URL}/customers`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n}\r\n\r\n// Fetch customer chart data (with token)\r\nexport function fetchCustomerChartData(token) {\r\n  return axios.get(`${API_BASE_URL}/customers/chart`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n}\r\n\r\n// Fetch single customer by ID (with token)\r\nexport function fetchCustomerById(id, token) {\r\n  return axios.get(`${API_BASE_URL}/customers/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}\r\n\r\n// Add new customer (with token)\r\nexport function addCustomer(data, token) {\r\n  return axios.post(`${API_BASE_URL}/customers`, data, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n}\r\n\r\n// Update customer (with token)\r\nexport function updateCustomer(id, data, token) {\r\n  return axios.put(`${API_BASE_URL}/customers/${id}`, data, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n}\r\n\r\n// Delete customer (with token)\r\nexport function deleteCustomer(id, token) {\r\n  return axios.delete(`${API_BASE_URL}/customers/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}\r\n\r\n// Print customer data (with token)\r\nexport function printCustomerData(token) {\r\n  return axios.get(`${API_BASE_URL}/customers/print`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n}"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,2BAA2B;;AAEvD;AACA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,OAAOF,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,aAAa,CAAC;AAChD;;AAEA;AACA,OAAO,SAASG,sBAAsBA,CAAA,EAAG;EACvC,OAAOJ,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,mBAAmB,CAAC;AACtD;;AAEA;AACA,OAAO,SAASI,cAAcA,CAACC,KAAK,EAAE;EACpC,OAAON,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,YAAY,EAAE;IAC5CM,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,sBAAsBA,CAACH,KAAK,EAAE;EAC5C,OAAON,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,kBAAkB,EAAE;IAClDM,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASI,iBAAiBA,CAACC,EAAE,EAAEL,KAAK,EAAE;EAC3C,OAAON,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,cAAcU,EAAE,EAAE,EAAE;IAClDJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,WAAWA,CAACC,IAAI,EAAEP,KAAK,EAAE;EACvC,OAAON,KAAK,CAACc,IAAI,CAAC,GAAGb,YAAY,YAAY,EAAEY,IAAI,EAAE;IACnDN,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASS,cAAcA,CAACJ,EAAE,EAAEE,IAAI,EAAEP,KAAK,EAAE;EAC9C,OAAON,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,cAAcU,EAAE,EAAE,EAAEE,IAAI,EAAE;IACxDN,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASW,cAAcA,CAACN,EAAE,EAAEL,KAAK,EAAE;EACxC,OAAON,KAAK,CAACkB,MAAM,CAAC,GAAGjB,YAAY,cAAcU,EAAE,EAAE,EAAE;IACrDJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASa,iBAAiBA,CAACb,KAAK,EAAE;EACvC,OAAON,KAAK,CAACG,GAAG,CAAC,GAAGF,YAAY,kBAAkB,EAAE;IAClDM,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}