{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import{fetchCustomers}from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CustomersList(){const[customers,setCustomers]=useState([]);const[token,setToken]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');useEffect(()=>{if(!token)return;setLoading(true);setError('');fetchCustomers(token).then(res=>{setCustomers(res.data);setLoading(false);}).catch(()=>{setError('Failed to fetch customers.');setLoading(false);});},[token]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Pelanggan\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"token\",className:\"form-label\",children:\"API Token\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"token\",placeholder:\"Enter API token for pelanggan endpoint\",value:token,onChange:e=>setToken(e.target.value)})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-hover\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pelanggan\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Alamat\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Telepon\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:loading?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:\"Loading...\"})}):error?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",className:\"text-danger\",children:error})}):customers.map(item=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.id}),/*#__PURE__*/_jsx(\"td\",{children:item.nama}),/*#__PURE__*/_jsx(\"td\",{children:item.alamat}),/*#__PURE__*/_jsx(\"td\",{children:item.telepon}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{className:\"btn btn-info btn-sm me-1\",to:\"/customers/\".concat(item.id),children:\"Show\"}),/*#__PURE__*/_jsx(Link,{className:\"btn btn-warning btn-sm me-1\",to:\"/customers/edit/\".concat(item.id),children:\"Edit\"})]})]},item.id))})]}),/*#__PURE__*/_jsx(Link,{className:\"btn btn-success\",to:\"/customers/add\",children:\"Tambah Pelanggan\"})]});}export default CustomersList;","map":{"version":3,"names":["React","useEffect","useState","Link","fetchCustomers","jsx","_jsx","jsxs","_jsxs","CustomersList","customers","setCustomers","token","setToken","loading","setLoading","error","setError","then","res","data","catch","className","children","htmlFor","type","id","placeholder","value","onChange","e","target","colSpan","map","item","nama","alamat","telepon","to","concat"],"sources":["C:/xampp2/htdocs/project-react-resto/src/pages/CustomersList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchCustomers } from '../api';\r\n\r\nfunction CustomersList() {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    setLoading(true);\r\n    setError('');\r\n    fetchCustomers(token)\r\n      .then(res => {\r\n        setCustomers(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to fetch customers.');\r\n        setLoading(false);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Data Pelanggan</h2>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"token\" className=\"form-label\">API Token</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"token\"\r\n          placeholder=\"Enter API token for pelanggan endpoint\"\r\n          value={token}\r\n          onChange={e => setToken(e.target.value)}\r\n        />\r\n      </div>\r\n      <table className=\"table table-bordered table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Pelanggan</th>\r\n            <th>Alamat</th>\r\n            <th>Telepon</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr><td colSpan=\"5\">Loading...</td></tr>\r\n          ) : error ? (\r\n            <tr><td colSpan=\"5\" className=\"text-danger\">{error}</td></tr>\r\n          ) : (\r\n            customers.map(item => (\r\n              <tr key={item.id}>\r\n                <td>{item.id}</td>\r\n                <td>{item.nama}</td>\r\n                <td>{item.alamat}</td>\r\n                <td>{item.telepon}</td>\r\n                <td>\r\n                  <Link className=\"btn btn-info btn-sm me-1\" to={`/customers/${item.id}`}>Show</Link>\r\n                  <Link className=\"btn btn-warning btn-sm me-1\" to={`/customers/edit/${item.id}`}>Edit</Link>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <Link className=\"btn btn-success\" to=\"/customers/add\">Tambah Pelanggan</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}